---
-
  name: Yarp
  ring: assess
  quadrant: techniques
  isNew: TRUE
  description: 'In a world of front applications and many backend micros-service, a reverse proxy could help to have a single endpoint for many different endpoints, aka servers. Yarp is a fast, lightweight, extendable <i>.Net</i> based Reverse proxy. Yarp uses the ASP.NET pipeline technology to managing incoming requests and routes the request streams to its destination. Routing could be done on configuration of on you own written logic. Because the reverse proxy application is just a piece of .Net code, its familiar and easy to work with. Namely, to code, to have it in source control and in your CI/CD pipeline and infrastructure.'
-
  name: C# 8 - non-nullable reference types
  ring: trial
  quadrant: techniques
  isNew: TRUE
  description: 'The solution against those pesky null reference exceptions'
-
  name: Progressive Web App
  ring: adopt
  quadrant: techniques
  isNew: TRUE
  description: '<b>Progressive Web Apps</b> are web apps that use emerging web browser APIs and features along with traditional progressive enhancement strategy 
  to bring a native app-like user experience to cross-platform web applications. By utilizing service workers that allow intercepting 
  and control of how a web browser handles its network requests and asset caching, the user has reliable fast web pages and offline experience.
  One of our projects that uses a PWA is <a href="https://www.terraindex.com">TerraIndex</a> that allows its field workers that have to cope 
  with unstable mobile connection and still have a reliable web app experience.
  You can get also started with a beginners tutorial <a href="https://www.smashingmagazine.com/2016/08/a-beginners-guide-to-progressive-web-apps/">here</a>'
-
  name: Vue3
  ring: trial
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'When it comes to frontend frameworks, <b>Vue</b> is the newest kid on the block. Now with <a href="https://v3.vuejs.org/">version 3 out of beta</a>, 
  XPRTZ''s believe it became mature enough to give it a trial run and compare against the more popular Angular and React.'
-
  name: Blazor
  ring: trial
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'Why mess with javascript if we can run frontend applications with C#'
-
  name: CosmosDb
  ring: adopt
  quadrant: platforms
  isNew: TRUE
  description: 'Quite interesting because it allows querying within a no-sql database'
-
  name: Fluent Assertions
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: '<b>Fluent Assertions</b> is an extensive set of extension methods that allow you to more naturally specify 
  the expected outcome of a TDD or BDD-style unit tests. Many of our XPRTZ colleagues have <a href="https://fluentassertions.com/">FluentAssertions</a> in their 
  standard set of tools that are used for each project.'
-
  name: Terraform
  ring: trial
  quadrant: tools
  isNew: TRUE
  description: '<a href="https://www.terraform.io/">Terraform</a> is een infrastructure-as-code (IaC) tool voor het provisioneren en onderhouden van cloud services.<br><br> 
  Infrastructure-as-code stelt ons in staat om de server configuraties die wij nodig hebben om onze software op te hosten op een eenduidige, herhaalbare en onderhoudbare manier op te zetten. 
  Dit verhoogt de kwaliteit van onze code doordat er geen verschillen meer zijn tussen onze ontwikkel-, test-, acceptatie- en productieomgevingen.<br><br> 
  Wat ons vooral aanspreekt aan Terraform is dat het een declaratieve tool is, d.w.z. dat we niet stap voor stap hoeven te specificeren hoe elke omgeving opgezet moet worden, maar dat we 
  simpelweg aangeven hoe elke omgeving er uit moet gaan zien en Terraform regelt de rest. Hierdoor hoef je niet meer tientallen scripts te bestuderen om een idee te krijgen wat er op elke omgeving staat.'
-
  name: AKS
  ring: trial
  quadrant: tools
  isNew: TRUE
  description: '<a href="https://azure.microsoft.com/nl-nl/services/kubernetes-service/">Azure Kubernetes Service (AKS)</a> bied alle mogelijkheden die wij nodig hebben voor het hosten en
  beheren van container applicaties m.b.v. Kubernetes.<br><br>
  Kubernetes is in een hele korte tijd uitgegroeid tot de de-facto standaard tool voor het orkestreren van container applicaties. En met AKS kunnen we hier gemakkelijk gebruik van maken binnen de Azure-cloud. 
  Als .Net developers hebben we al veel affiniteit en ervaring met Microsoft Azure en daarom maken we graag gebruik van AKS bij het bouwen van container applicaties.'
-
  name: FakeItEasy
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: 'To test the functionality of a unit, it should be isolated from the rest of the system. With FakeItEasy the units external dependencies are replaced with Mockes, Stubs or Fakes. In FakeItEasy all are created the same, but usage determines what they are. The framework allows an easy setup of an external dependency, and also a verification external dependency. The unit may call Mocking framework with an intuitive and fluent syntax.'
-
  name: Cypress
  ring: assess
  quadrant: tools
  isNew: TRUE
  description: '<b>Cypress</b> is the next generation E2E testing tool that made itself famous by building its own architecture instead of using Selenium   description: '<b>Cypress</b> is the next generation E2E testing tool that made itself famous by building its own architecture instead of using Selenium 
  like most testing frameworks do. It''s an <a href="https://www.cypress.io/how-it-works/">all-in-one test suite</a> that is 
  blazing fast, easy to setup and an delight to delop with, that''s what we like at XPRTZ so more than enough reason to asses it.'
  description: '<b>Cypress</b> is the next generation E2E testing tool that made itself famous by building its own architecture instead of using Selenium 
 - 
  name: AutoFixture 
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: 'When writing test code, you want to write code for that case, and not plumming code to initialize test objects because their require it. With AutoFixture you can easyily create testfixures, in the setup code you specify only the test relvante parts. The non-relevant parts are automaticly filled with dummy data during execution. The test case is focused on the essentials of the testcase its self instead of object initialized. It makes Test-Driven Development a step easier and our lives as developers happier.' 