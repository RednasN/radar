---
-
  name: Progressive Web App
  ring: adopt
  quadrant: techniques
  isNew: TRUE
  description: '<b>Progressive Web Apps</b> are web apps that use emerging web browser APIs and features along with traditional progressive enhancement strategy to bring a native app-like user experience to cross-platform web applications. By utilizing service workers that allow intercepting and control of how a web browser handles its network requests and asset caching, the user has reliable fast web pages and offline experience. One of our projects that uses a PWA is <a href="https://www.terraindex.com">TerraIndex</a> that allows its field workers that have to cope with unstable mobile connection and still have a reliable web app experience. You can get also started with a beginners tutorial <a href="https://www.smashingmagazine.com/2016/08/a-beginners-guide-to-progressive-web-apps/">here</a>'
-
  name: C# 8 - non-nullable reference types
  ring: trial
  quadrant: techniques
  isNew: TRUE
  description: 'Back in 1965 <a href="https://en.wikipedia.org/wiki/Tony_Hoare">Tony Hoare</a> introduced the null reference in <a href="https://en.wikipedia.org/wiki/ALGOL_W">ALGOL W</a> and this was copied by a lot of languages. Later he called this his billion-dollar mistake and apologized for the problem this has caused. C# was one of the languages that copied this feature and its developers and users had to suffer for it. Starting with C#8.0 developers now have the option to get rid of this pain with <a href="https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references">Nullable reference types</a>. Does this mean that null doesn''t exist anymore? No but you have to be explicit about it.<br><br>Reference types now behave like value types for example (bool, int, char, etc.)<br><br>When you want to create a nullable string now you have to define it as follows:<br>string? name;<br><br>Then when ever you use this variable in your code without first checking for a null reference you will get a compiler warning.<br><br>To be able to introduce this concept gradually in your code this feature can be enabled per project or per class see also <a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/tutorials/upgrade-to-nullable-references">Upgrade to nullable references</a>.<br><br>We see this feature as a way to better declare the intent of our code and a good practice to prevent the dreaded Null Reference Exception.'
-
  name: Yarp
  ring: assess
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'With <a href="https://github.com/microsoft/reverse-proxy">Yarp</a>, a .Net application can be extended with a build-in reverse proxy. In a world of front applications and many backend micros-service, a reverse proxy could help to have a single endpoint for many different endpoints, aka servers. Yarp is a fast, lightweight, extendable .Net based Reverse proxy. Yarp uses the ASP.NET pipeline technology to managing incoming requests and routes the request streams to its destination. Routing could be done on configuration of on you own written logic. Because the reverse proxy application is just a piece of .Net code, its familiar and easy to work with. Namely, to code, to have it in source control and in your CI/CD pipeline and infrastructure. <br /><br /> Yarp is still experimental, and for bigger projects solution like <a href="https://www.nginx.com/">Nginx</a> (a reverse-proxy) are a better solution. But it has potential, and could replace in time an <a href="https://github.com/ThreeMammals/Ocelot">Ocelot</a> (an api gateway) application (if you do not need the request/response bodies). At XPRTZ we keep track of this Microsoft project.'
-
  name: Vue3
  ring: trial
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'When it comes to frontend frameworks, <b>Vue</b> is the newest kid on the block. Now with <a href="https://v3.vuejs.org/">version 3 out of beta</a>, XPRTZ''s believe it became mature enough to give it a trial run and compare against the more popular Angular and React.'
-
  name: Blazor
  ring: trial
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'Why mess with javascript if we can run frontend applications with C#'
-
  name: CosmosDb
  ring: adopt
  quadrant: platforms
  isNew: TRUE
  description: 'Quite interesting because it allows querying within a no-sql database'
-
  name: Fluent Assertions
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: '<b>Fluent Assertions</b> is an extensive set of extension methods that allow you to more naturally specify the expected outcome of a TDD or BDD-style unit tests. Many of our XPRTZ colleagues have <a href="https://fluentassertions.com/">FluentAssertions</a> in their standard set of tools that are used for each project.'
-
  name: Terraform
  ring: trial
  quadrant: tools
  isNew: TRUE
  description: '<a href="https://www.terraform.io/">Terraform</a> is an infrastructure-as-code (IaC) tool for provisioning and maintaining cloud services.<br><br>Infrastructure-as-code allows us to create and maintain the server configurations that we need to host our applications in an unambigous and repeatable way. This increases the quality of our code because it eliminate any chance of differences between our development, test, acceptance and production environments.<br><br>One of the features of Terraform that we particularly like is it''s declarative syntax. This enables us to simply declare what the environment we want Terraform to create should look like, without needing to specify every single step that needs to be executed to create it. This also means that we can see exactly what is configured on each environment without having to parse dozens of install scripts.'
-
  name: AKS
  ring: trial
  quadrant: platforms
  isNew: TRUE
  description: '<a href="https://azure.microsoft.com/nl-nl/services/kubernetes-service/">Azure Kubernetes Service (AKS)</a> is a cloud service for hosting and maintaining container applications on Microsoft Azure, using Kubernetes.<br><br>Kubernetes has quickly become the de-facto standard for orchestrating container applications. With AKS we have an easy to use tool for working with Kubernetes in the Azure cloud. Since we have a lot of experience and affinity with Microsoft Azure as .Net developers, AKS is the logical tool we reach for when building container applications.'
-
  name: FakeItEasy
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: 'With <b>FakeItEasy</b> the unit under test can be isoltated from the rest of the system so your not depended on it. With FakeItEasy the units external dependencies are replaced with Dummies, Mockes, Stubs or Fakes. In FakeItEasy they are all the same, and are created the same, but the usage determines what they eventually are. The framework allows an easy setup of an external dependency, and also the verification if external dependency call''s. The unit may call Mocking framework with an intuitive and fluent syntax. <br /><br /> Other mocking/isolation frameworks such as NSubstitute and Moq do the same job, but FakeItEasy makes it really, yes, easy.. '
-
  name: Cypress
  ring: assess
  quadrant: tools
  isNew: TRUE
  description: '<b>Cypress</b> is the next generation E2E testing tool that made itself famous by building its own architecture instead of using Selenium like most testing frameworks do. It''s an <a href="https://www.cypress.io/how-it-works/">all-in-one test suite</a> that is blazing fast, easy to setup and an delight to delop with, that''s what we like at XPRTZ so more than enough reason to asses it.'
-
  name: OpenShift
  ring: assess
  quadrant: platforms
  isNew: TRUE
  description: 'Tool voor het hosten en beheren van container applicaties. Alternatief voor AKS.'
-
  name: AutoFixture
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: 'With <a href="https://github.com/AutoFixture/AutoFixture">AutoFixture</a> you can easily create testfixures. When writing test code, you want to write code for that specific test case, and not all plumming code to initialize test objects because they require so. When initializing test objects only the test relvante parts are specified. The non-relevant parts are automatically filled with dummy data during execution. The test case is focused on the essentials of the testcase its self instead of object initialized. <br /><br /> There are alternatives such as <a href="https://github.com/bchavez/Bogus">Bogus</a>, which also generate fake data in test objects. An advantage of AutoFixture for asserting fake objects is the initialization of all properties with data, instead with Bogus only set properties are filled. It''s more which flavour you want. <br /><br /> We at XPRTZ use this all the time when writing unit tests. It makes Test-Driven Development a step easier and our lives as developers happier.'
-
  name: Event-driven architectuur
  ring: adopt
  quadrant: techniques
  isNew: TRUE
  description: 'With <a href="https://martinfowler.com/articles/201701-event-driven.html">event-driven</a> architecture events are used to trigger and communicate between decoupled Microservices. An event is any change in a state, e.g. a customer is updated or even an external triggered situation. There are three key components in Event-driven architecture, namely event producers, event routers/mediators, and event consumers. The architecture is decoupled or lose coupled because producers donâ€™t know which consumers are listening for an event, and what the consequences are of its occurrence. The Azure platform itself is can be used as an event producer, e.g. <i>Cosmos DB</i> change event or scaling events from App service plans. <br /><br />Platforms like Kafka or Dapr are good solutions to use in applications based on an event-driven architecture. But also basic messaging systems like <i>RabbitMQ</i>, <i>Service Bus</i> or <i>Azure Event Grid</i> will suffice but may require more "low-level" programming.
'
-
  name: Azure Servicebus
  ring: adopt
  quadrant: platforms
  isNew: TRUE
  description: 'Servicebus implementatie op Microsoft Azure.'
-
  name: Azure Functions
  ring: adopt
  quadrant: platforms
  isNew: TRUE
  description: 'Serverless functions op Microsoft Azure.'
-
  name: Marten DB
  ring: assess
  quadrant: platforms
  isNew: TRUE
  description: 'Storage oplossing specifiek ontworpen voor event-driven en CQS/CQRS architecturen.'
-
  name: Dapr
  ring: assess
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'With <a href="https://dapr.io">Dapr</a> you have building blocks for building distributed applications. The shift away from monolithic applications to Microservices provided many benefits, but made it also more complex and harder for the developer. Dapr is specifically aimed to help with this in simplifying the development of distributed applications. <br /><br />Dapr is using <i>Kubernetes</i> as its primary cloud hosting environment, but it is not required. Dapr has pre-built components that solve a common set of problems in distributed applications, e.g. service invocation, state management, event handling, and many more. The key concept of Dapr is that it uses sidecars (small applications running along with your Microservices) to operate it main functionalities.<br /><br />We havenâ€™t used it in projects, but we follow the progress Dapr with a lot of interest.'
-
  name: Azure Static WebApps
  ring: adopt
  quadrant: platforms
  isNew: TRUE
  description: 'Platfom voor het hosten van simpele statische websites op Microsoft Azure.'
-
  name: GraphQL
  ring: adopt
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'Een query language voor API''s die alleen de data teruggeeft waarom gevraagd wordt.'
-
  name: gRPC
  ring: adopt
  quadrant: languages & frameworks
  isNew: TRUE
  description: 'With <a href="https://grpc.io">gPRC</a> it is possible to communicate with remote services in a modern high perforce manner. gPRC is a framework where services have clear interfaces and structured messages for requests and responses. It uses Protobuf to serialize the messages to a binary message format, making the payload significant smaller compared to JSON. It supports both HTTP and HTTP2. <br /><br />Most web backend developers switched from SOAP to JSON (REST) / OpenAPI services past decade, and this is in many cases the best solution. But, when you have massive numbers of remote calls and milliseconds matter and both sides could be changed, gPRC should definitely be considered as a Remote Procedure Call (RPC) framework. <br /><br />We have used gPRC in Microservice architecture environments where low latency was required.'
-
  name: GitHub Actions
  ring: assess
  quadrant: tools
  isNew: TRUE
  description: 'Tool voor het automatiseren van CI/CD workflows vanuit GitHub repositories.'
-
  name: Dependabot
  ring: trial
  quadrant: tools
  isNew: TRUE
  description: 'Creert automatische pull requests om je dependencies up-to-date te houden.'
-
  name: Azure DevOps Pipelines
  ring: adopt
  quadrant: tools
  isNew: TRUE
  description: 'Geautomatiseerde Ci/CD pipelines.'